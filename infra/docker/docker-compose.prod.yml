name: web_project
services:
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/minjungw00/web-project-backend}:${BE_TAG:-latest}
    env_file:
      - ${SERVER_ROOT:-.}/backend/.env.production
    environment:
      JAVA_OPTS: -Xms512m -Xmx512m
    volumes:
      - ${SERVER_ROOT:-$HOME/srv/web_project}/backend/logs:/app/logs
      - ${SERVER_ROOT:-$HOME/srv/web_project}/backend/config:/app/config:ro
    expose:
      - "8080"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:8080/actuator/health || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ${COMPOSE_NETWORK:-webnet}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: ${MYSQL_IMAGE:-mysql}:${DB_TAG:-8.4}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-change_me}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-appdb}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-change_me}
    volumes:
      - ${MYSQL_DATA_MOUNT:-mysql-data}:/var/lib/mysql
      - ${SERVER_ROOT:-.}/mysql/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'mysqladmin ping --silent -uroot -p"$${MYSQL_ROOT_PASSWORD:-}" || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped
    networks:
      - ${COMPOSE_NETWORK:-webnet}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: ${NGINX_IMAGE:-ghcr.io/minjungw00/web-project-nginx}:${NGINX_TAG:-latest}
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ${SERVER_ROOT:-.}/nginx/.env.production
    volumes:
      - ${CERTBOT_MOUNT:-certbot}:/var/www/certbot
      - ${FE_DIST_MOUNT:-frontend-dist}:/usr/share/nginx/html:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost/healthz >/dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - ${COMPOSE_NETWORK:-webnet}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # One-shot job to sync FE dist from artifact image to shared volume
  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/minjungw00/web-project-frontend}:${FE_TAG:-latest}
    command:
      [
        "sh",
        "-c",
        'set -euo pipefail; src=${FE_DIST_PATH:-/opt/dist}; dest=/dist; mkdir -p "$$dest"; if [ -d "$$src" ]; then rsync -a --delete "$$src"/ "$$dest"/; else echo "FE dist not found at $$src"; exit 1; fi',
      ]
    volumes:
      - ${FE_DIST_MOUNT:-frontend-dist}:/dist
    restart: "no"
    networks:
      - ${COMPOSE_NETWORK:-webnet}
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  webnet:
    driver: bridge

volumes:
  frontend-dist:
  mysql-data:
  certbot:
