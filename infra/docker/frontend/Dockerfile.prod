# syntax=docker/dockerfile:1.7

############################################
# Builder: create production dist
############################################
FROM node:22-alpine AS builder

ENV CI=true \
    PNPM_HOME=/home/node/.local/share/pnpm \
    PNPM_STORE_PATH=/home/node/.pnpm-store \
    PATH=/home/node/.local/share/pnpm:$PATH

RUN apk upgrade --no-cache

RUN corepack enable && corepack prepare pnpm@9 --activate

WORKDIR /workspace

COPY frontend/package.json frontend/pnpm-lock.yaml ./
RUN if [ -f pnpm-lock.yaml ] && [ ! -s pnpm-lock.yaml ]; then rm pnpm-lock.yaml; fi
RUN pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

COPY frontend ./
ENV NODE_ENV=production
RUN pnpm build

############################################
# Artifact image: contains only dist at /opt/dist
############################################
FROM alpine:3.20

ARG SOURCE_REPOSITORY="minjungw00/Web_Project"
ENV SOURCE_REPOSITORY="${SOURCE_REPOSITORY}"

RUN apk upgrade --no-cache

LABEL org.opencontainers.image.title="web-project-frontend" \
  org.opencontainers.image.description="Frontend build artifact image containing compiled dist" \
  org.opencontainers.image.source="https://github.com/${SOURCE_REPOSITORY}" \
  org.opencontainers.image.licenses="MIT"

RUN apk add --no-cache rsync \
  && adduser -D -u 10001 app \
  && mkdir -p /opt/dist

COPY --from=builder /workspace/dist /opt/dist

# No default command required; this image is used as a source for dist extraction

ENV FE_DIST_PATH=/opt/dist
