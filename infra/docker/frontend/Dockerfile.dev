# syntax=docker/dockerfile:1.7
FROM node:22-alpine

ARG USER_ID=1000
ARG GROUP_ID=1000

ENV CI=true
ENV PNPM_HOME=/home/app/.local/share/pnpm
ENV PNPM_STORE_PATH=/home/app/.pnpm-store
ENV PATH=$PNPM_HOME:$PATH

RUN apk add --no-cache bash shadow su-exec \
  && userdel -r node || true \
  && groupdel node || true \
  && groupadd -g ${GROUP_ID} app \
  && useradd -u ${USER_ID} -g app -m app \
  && mkdir -p $PNPM_HOME $PNPM_STORE_PATH \
  && chown -R app:app $PNPM_HOME $PNPM_STORE_PATH

RUN corepack enable \
  && corepack prepare pnpm@9 --activate

WORKDIR /workspace

COPY frontend/package.json frontend/pnpm-lock.yaml ./
RUN if [ -f pnpm-lock.yaml ] && [ ! -s pnpm-lock.yaml ]; then rm pnpm-lock.yaml; fi
RUN mkdir -p /workspace/node_modules \
  && chown -R app:app /workspace

USER app

# Pre-install dependencies for faster start; bind mounts can override them at runtime.
RUN pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

USER root

COPY infra/docker/frontend/entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["pnpm", "dev", "--host", "0.0.0.0", "--port", "5173"]
